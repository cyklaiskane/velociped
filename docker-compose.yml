version: '3.7'

volumes:
  db_data: {}
  letsencrypt_data: {}

x-logging: &logging-options
  options:
    max-size: "200k"
    max-file: "10"

services:
  traefik:
    image: traefik:v2.4
    logging: *logging-options
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt_data:/letsencrypt
    command:
      - --providers.docker
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false

      - --log.level=INFO
      - --accesslog

      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure

      - --entrypoints.websecure.address=:443

      - --certificatesresolvers.letsencrypt.acme.email=${LETS_ENCRYPT_EMAIL:-Corey.Ragosnig@skane.se}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web

  db:
    image: pgrouting/pgrouting:13-3.0-3.1.1
    logging: *logging-options
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - db_data:/var/lib/postgresql/data:cached

  api:
    image: velociped
    logging: *logging-options
    depends_on:
      - db
    environment:
      - POSTGRES_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
      - LM_CLIENT_ID
      - LM_CLIENT_SECRET
      - GEODATA_URL=${GEODATA_URL:-wfs:http://geodata.skane.se:8080/geoserver/wfs}
      - GEODATA_LAYER=${GEODATA_LAYER:-rs:cyklaiskane_trafiksakerhetsklassat_natverk}
      - GEODATA_BBOX
      - GEODATA_UPDATE_INIT={GEODATA_UPDATE_INIT:-False}
      - TILES_TS_URL=${TILES_TS_URL:-https://maps.cyklaiskane.se/trafiksakerhet/{z}/{x}/{y}.png}
      - TILES_BG_URL=${TILES_BG_URL:-https://maps.cyklaiskane.se/nedtonad/{z}/{x}/{y}.png}
    ports:
      - 8000:8000
    volumes:
      - ./profiles.json:/app/profiles.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${API_ADDRESS:-api.cyklaiskane.se}`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
      - traefik.http.services.api.loadbalancer.server.port=8000

  tileserver:
    image: cyklaiskane-tileserver
    logging: *logging-options
    depends_on:
      - api
    ports:
      - 8001:8000
    command:
      - -p
      - "8000"

  mapproxy:
    image: cyklaiskane-mapproxy
    logging: *logging-options
    ports:
      - 8002:8000

  varnish:
    image: cyklaiskane-varnish
    logging: *logging-options
    depends_on:
      - tileserver
      - mapproxy
    environment:
      - VARNISH_SIZE=1G
    ports:
      - 8080:80
    labels:
      - traefik.enable=true

      - traefik.http.routers.varnish.rule=Host(`${MAPS_ADDRESS:-maps.cyklaiskane.se}`)
      - traefik.http.routers.varnish.entrypoints=websecure
      - traefik.http.routers.varnish.tls=true
      - traefik.http.routers.varnish.tls.certresolver=letsencrypt
      - traefik.http.services.varnish.loadbalancer.server.port=80
